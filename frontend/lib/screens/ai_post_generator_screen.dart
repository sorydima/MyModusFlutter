import 'package:flutter/material.dart';
import 'package:cached_network_image/cached_network_image.dart';
import 'package:shimmer/shimmer.dart';
import 'package:animations/animations.dart';

class AIPostGeneratorScreen extends StatefulWidget {
  const AIPostGeneratorScreen({super.key});

  @override
  State<AIPostGeneratorScreen> createState() => _AIPostGeneratorScreenState();
}

class _AIPostGeneratorScreenState extends State<AIPostGeneratorScreen>
    with TickerProviderStateMixin {
  late TabController _tabController;
  bool _isLoading = false;
  String _selectedCategory = 'Fashion';
  String _selectedTone = 'Casual';
  String _selectedLength = 'Medium';

  final List<String> _categories = ['Fashion', 'Lifestyle', 'Beauty', 'Travel', 'Food', 'Fitness'];
  final List<String> _tones = ['Casual', 'Professional', 'Funny', 'Inspirational', 'Educational', 'Trendy'];
  final List<String> _lengths = ['Short', 'Medium', 'Long'];

  final TextEditingController _topicController = TextEditingController();
  final TextEditingController _keywordsController = TextEditingController();
  final TextEditingController _customPromptController = TextEditingController();

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 3, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    _topicController.dispose();
    _keywordsController.dispose();
    _customPromptController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ—Å—Ç–æ–≤'),
        backgroundColor: Colors.transparent,
        elevation: 0,
        actions: [
          IconButton(
            icon: const Icon(Icons.refresh),
            onPressed: _refreshData,
          ),
        ],
      ),
      body: Column(
        children: [
          // –§–∏–ª—å—Ç—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          _buildGeneratorSettings(),
          
          const SizedBox(height: 20),
          
          // Tab Bar
          Container(
            margin: const EdgeInsets.symmetric(horizontal: 20),
            decoration: BoxDecoration(
              color: Colors.grey[100],
              borderRadius: BorderRadius.circular(25),
            ),
            child: TabBar(
              controller: _tabController,
              indicator: BoxDecoration(
                borderRadius: BorderRadius.circular(25),
                color: Theme.of(context).primaryColor,
              ),
              labelColor: Colors.white,
              unselectedLabelColor: Colors.grey[600],
              tabs: const [
                Tab(text: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è'),
                Tab(text: '–®–∞–±–ª–æ–Ω—ã'),
                Tab(text: '–ò—Å—Ç–æ—Ä–∏—è'),
              ],
            ),
          ),
          
          const SizedBox(height: 20),
          
          // Tab Content
          Expanded(
            child: TabBarView(
              controller: _tabController,
              children: [
                _buildGenerationTab(),
                _buildTemplatesTab(),
                _buildHistoryTab(),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildGeneratorSettings() {
    return Container(
      margin: const EdgeInsets.symmetric(horizontal: 20),
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            spreadRadius: 1,
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏',
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
              color: Colors.grey[800],
            ),
          ),
          const SizedBox(height: 16),
          
          // –¢–µ–º–∞ –ø–æ—Å—Ç–∞
          TextField(
            controller: _topicController,
            decoration: InputDecoration(
              labelText: '–¢–µ–º–∞ –ø–æ—Å—Ç–∞',
              hintText: '–ù–∞–ø—Ä–∏–º–µ—Ä: –≤–µ—Å–µ–Ω–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã 2024',
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(12),
              ),
              prefixIcon: const Icon(Icons.topic),
            ),
          ),
          
          const SizedBox(height: 16),
          
          // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
          TextField(
            controller: _keywordsController,
            decoration: InputDecoration(
              labelText: '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞',
              hintText: '–ù–∞–ø—Ä–∏–º–µ—Ä: –º–æ–¥–∞, —Å—Ç–∏–ª—å, —Ç—Ä–µ–Ω–¥—ã',
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(12),
              ),
              prefixIcon: const Icon(Icons.key),
            ),
          ),
          
          const SizedBox(height: 16),
          
          // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
          Row(
            children: [
              Expanded(
                child: _buildDropdown(
                  label: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                  value: _selectedCategory,
                  items: _categories,
                  onChanged: (value) => setState(() => _selectedCategory = value!),
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildDropdown(
                  label: '–¢–æ–Ω',
                  value: _selectedTone,
                  items: _tones,
                  onChanged: (value) => setState(() => _selectedTone = value!),
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildDropdown(
                  label: '–î–ª–∏–Ω–∞',
                  value: _selectedLength,
                  items: _lengths,
                  onChanged: (value) => setState(() => _selectedLength = value!),
                ),
              ),
            ],
          ),
          
          const SizedBox(height: 20),
          
          // –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
          SizedBox(
            width: double.infinity,
            height: 50,
            child: ElevatedButton(
              onPressed: _generatePost,
              style: ElevatedButton.styleFrom(
                backgroundColor: Theme.of(context).primaryColor,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
              child: _isLoading
                  ? const SizedBox(
                      width: 20,
                      height: 20,
                      child: CircularProgressIndicator(
                        strokeWidth: 2,
                        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                      ),
                    )
                  : const Text(
                      '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDropdown({
    required String label,
    required String value,
    required List<String> items,
    required ValueChanged<String?> onChanged,
  }) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          label,
          style: TextStyle(
            fontSize: 12,
            fontWeight: FontWeight.w600,
            color: Colors.grey[600],
          ),
        ),
        const SizedBox(height: 8),
        DropdownButtonFormField<String>(
          value: value,
          decoration: InputDecoration(
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(8),
            ),
            contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
          ),
          items: items.map((item) => DropdownMenuItem(
            value: item,
            child: Text(item, style: const TextStyle(fontSize: 14)),
          )).toList(),
          onChanged: onChanged,
        ),
      ],
    );
  }

  Widget _buildGenerationTab() {
    return _buildTabContent(
      title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤',
      subtitle: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é AI',
      children: [
        _buildGeneratedPostCard(
          title: '–í–µ—Å–µ–Ω–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã 2024: —á—Ç–æ –Ω–æ—Å–∏—Ç—å —ç—Ç–æ–π –≤–µ—Å–Ω–æ–π',
          content: '–í–µ—Å–Ω–∞ 2024 –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–∞–º —Å–≤–µ–∂–∏–µ –∏–¥–µ–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ! üå∏\n\n'
              '‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:\n'
              '‚Ä¢ –ü–∞—Å—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–Ω–∞ —Å —è—Ä–∫–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏\n'
              '‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ sustainable fashion\n'
              '‚Ä¢ Oversize —Å–∏–ª—É—ç—Ç—ã –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —Ç–∫–∞–Ω–∏\n'
              '‚Ä¢ –ú–∏–Ω–∏–º–∞–ª–∏–∑–º —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ maximalism\n\n'
              'üí° –ö–∞–∫ –Ω–æ—Å–∏—Ç—å:\n'
              '–°–æ—á–µ—Ç–∞–π—Ç–µ –ª–µ–≥–∫–∏–µ –ø–ª–∞—Ç—å—è —Å –æ–±—ä–µ–º–Ω—ã–º–∏ –∫—É—Ä—Ç–∫–∞–º–∏, '
              '–¥–æ–±–∞–≤–ª—è–π—Ç–µ —è—Ä–∫–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∫ –±–∞–∑–æ–≤—ã–º –æ–±—Ä–∞–∑–∞–º. '
              '–ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ü–≤–µ—Ç–∞–º–∏!',
          hashtags: ['#–≤–µ—Å–Ω–∞2024', '#—Ç—Ä–µ–Ω–¥—ã', '#–º–æ–¥–∞', '#—Å—Ç–∏–ª—å', '#fashion'],
          imageUrl: 'https://via.placeholder.com/300x200/FFB6C1/FFFFFF?text=Spring+Trends',
          likes: 234,
          comments: 45,
          shares: 12,
        ),
        _buildGeneratedPostCard(
          title: '5 —Å–ø–æ—Å–æ–±–æ–≤ –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–π –≥–∞—Ä–¥–µ—Ä–æ–±',
          content: '–•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π —Å—Ç–∏–ª—å –±–µ–∑ –±–æ–ª—å—à–∏—Ö –∑–∞—Ç—Ä–∞—Ç? '
              '–í–æ—Ç 5 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤! üí´\n\n'
              '1Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã\n'
              '2Ô∏è‚É£ –ü–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å layering\n'
              '3Ô∏è‚É£ –û–±–Ω–æ–≤–∏—Ç–µ –æ–±—É–≤—å\n'
              '4Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ statement piece\n'
              '5Ô∏è‚É£ –ü–æ–∏–≥—Ä–∞–π—Ç–µ —Å —Ç–µ–∫—Å—Ç—É—Ä–∞–º–∏\n\n'
              '–ü–æ–º–Ω–∏—Ç–µ: —Å—Ç–∏–ª—å - —ç—Ç–æ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ!',
          hashtags: ['#–≥–∞—Ä–¥–µ—Ä–æ–±', '#—Å—Ç–∏–ª—å', '#–º–æ–¥–∞', '#—Å–æ–≤–µ—Ç—ã', '#fashion'],
          imageUrl: 'https://via.placeholder.com/300x200/87CEEB/FFFFFF?text=Wardrobe+Tips',
          likes: 189,
          comments: 32,
          shares: 8,
        ),
      ],
    );
  }

  Widget _buildTemplatesTab() {
    return _buildTabContent(
      title: '–®–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤',
      subtitle: '–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
      children: [
        _buildTemplateCard(
          title: '–û–±–∑–æ—Ä —Ç–æ–≤–∞—Ä–∞',
          description: '–®–∞–±–ª–æ–Ω –¥–ª—è –æ–±–∑–æ—Ä–∞ –º–æ–¥–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
          icon: Icons.shopping_bag,
          color: Colors.blue,
          template: 'üî• –ù–æ–≤–∏–Ω–∫–∞! {–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞}\n\n'
              '‚ú® –ß—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ:\n'
              '‚Ä¢ {–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1}\n'
              '‚Ä¢ {–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2}\n'
              '‚Ä¢ {–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 3}\n\n'
              'üí∞ –¶–µ–Ω–∞: {—Ü–µ–Ω–∞}\n'
              'üõí –ì–¥–µ –∫—É–ø–∏—Ç—å: {—Å—Å—ã–ª–∫–∞}\n\n'
              'üí≠ –í–∞—à–µ –º–Ω–µ–Ω–∏–µ?',
        ),
        _buildTemplateCard(
          title: '–°—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç',
          description: '–®–∞–±–ª–æ–Ω –¥–ª—è —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
          icon: Icons.style,
          color: Colors.purple,
          template: 'üí° –°—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –¥–Ω—è\n\n'
              'üéØ –¢–µ–º–∞: {—Ç–µ–º–∞ —Å–æ–≤–µ—Ç–∞}\n\n'
              'üìù –û–ø–∏—Å–∞–Ω–∏–µ:\n'
              '{–æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–≤–µ—Ç–∞}\n\n'
              '‚úÖ –ö–∞–∫ –ø—Ä–∏–º–µ–Ω–∏—Ç—å:\n'
              '‚Ä¢ {—à–∞–≥ 1}\n'
              '‚Ä¢ {—à–∞–≥ 2}\n'
              '‚Ä¢ {—à–∞–≥ 3}\n\n'
              'üí≠ –ü—Ä–æ–±–æ–≤–∞–ª–∏ —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥?',
        ),
        _buildTemplateCard(
          title: '–¢—Ä–µ–Ω–¥-–∞–Ω–∞–ª–∏–∑',
          description: '–®–∞–±–ª–æ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–æ–¥–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤',
          icon: Icons.trending_up,
          color: Colors.orange,
          template: 'üìà –¢—Ä–µ–Ω–¥-–∞–Ω–∞–ª–∏–∑: {–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞}\n\n'
              'üîç –ß—Ç–æ —ç—Ç–æ:\n'
              '{–æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞}\n\n'
              'üìä –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {—É—Ä–æ–≤–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏}\n'
              '‚è∞ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {–≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Ç—Ä–µ–Ω–¥–∞}\n\n'
              'üí° –ö–∞–∫ –Ω–æ—Å–∏—Ç—å:\n'
              '{—Å–æ–≤–µ—Ç—ã –ø–æ –Ω–æ—Å–∫–µ}\n\n'
              'ü§î –í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —ç—Ç–æ–º—É —Ç—Ä–µ–Ω–¥—É?',
        ),
      ],
    );
  }

  Widget _buildHistoryTab() {
    return _buildTabContent(
      title: '–ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π',
      subtitle: '–í–∞—à–∏ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã',
      children: [
        _buildHistoryCard(
          title: '–í–µ—Å–µ–Ω–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã 2024',
          date: '15 –º–∞—Ä—Ç–∞ 2024',
          status: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω',
          engagement: '–í—ã—Å–æ–∫–æ–µ',
          color: Colors.green,
        ),
        _buildHistoryCard(
          title: '5 —Å–ø–æ—Å–æ–±–æ–≤ –æ–±–Ω–æ–≤–∏—Ç—å –≥–∞—Ä–¥–µ—Ä–æ–±',
          date: '12 –º–∞—Ä—Ç–∞ 2024',
          status: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
          engagement: '–°—Ä–µ–¥–Ω–µ–µ',
          color: Colors.orange,
        ),
        _buildHistoryCard(
          title: '–û–±–∑–æ—Ä –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
          date: '10 –º–∞—Ä—Ç–∞ 2024',
          status: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω',
          engagement: '–í—ã—Å–æ–∫–æ–µ',
          color: Colors.green,
        ),
        _buildHistoryCard(
          title: '–°—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã',
          date: '8 –º–∞—Ä—Ç–∞ 2024',
          status: '–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω',
          engagement: '–ù–∏–∑–∫–æ–µ',
          color: Colors.grey,
        ),
      ],
    );
  }

  Widget _buildTabContent({
    required String title,
    required String subtitle,
    required List<Widget> children,
  }) {
    return SingleChildScrollView(
      padding: const EdgeInsets.symmetric(horizontal: 20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 24,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          Text(
            subtitle,
            style: TextStyle(
              fontSize: 16,
              color: Colors.grey[600],
            ),
          ),
          const SizedBox(height: 20),
          ...children,
          const SizedBox(height: 20),
        ],
      ),
    );
  }

  Widget _buildGeneratedPostCard({
    required String title,
    required String content,
    required List<String> hashtags,
    required String imageUrl,
    required int likes,
    required int comments,
    required int shares,
  }) {
    return Container(
      margin: const EdgeInsets.only(bottom: 20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            spreadRadius: 1,
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          ClipRRect(
            borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
            child: CachedNetworkImage(
              imageUrl: imageUrl,
              height: 200,
              width: double.infinity,
              fit: BoxFit.cover,
              placeholder: (context, url) => Shimmer.fromColors(
                baseColor: Colors.grey[300]!,
                highlightColor: Colors.grey[100]!,
                child: Container(
                  height: 200,
                  color: Colors.white,
                ),
              ),
              errorWidget: (context, url, error) => Container(
                height: 200,
                color: Colors.grey[300],
                child: const Icon(Icons.error, size: 50),
              ),
            ),
          ),
          
          Padding(
            padding: const EdgeInsets.all(20),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                
                const SizedBox(height: 16),
                
                Text(
                  content,
                  style: TextStyle(
                    fontSize: 14,
                    color: Colors.grey[700],
                    height: 1.5,
                  ),
                ),
                
                const SizedBox(height: 16),
                
                // –•–µ—à—Ç–µ–≥–∏
                Wrap(
                  spacing: 8,
                  runSpacing: 8,
                  children: hashtags.map((tag) => Container(
                    padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                    decoration: BoxDecoration(
                      color: Colors.blue.withOpacity(0.1),
                      borderRadius: BorderRadius.circular(20),
                    ),
                    child: Text(
                      tag,
                      style: const TextStyle(
                        color: Colors.blue,
                        fontSize: 12,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  )).toList(),
                ),
                
                const SizedBox(height: 20),
                
                // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∫–Ω–æ–ø–∫–∏
                Row(
                  children: [
                    _buildStatItem(Icons.favorite, likes.toString(), Colors.red),
                    const SizedBox(width: 20),
                    _buildStatItem(Icons.comment, comments.toString(), Colors.blue),
                    const SizedBox(width: 20),
                    _buildStatItem(Icons.share, shares.toString(), Colors.green),
                    const Spacer(),
                    ElevatedButton(
                      onPressed: () {
                        // TODO: –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Theme.of(context).primaryColor,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(20),
                        ),
                      ),
                      child: const Text('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'),
                    ),
                    const SizedBox(width: 12),
                    OutlinedButton(
                      onPressed: () {
                        // TODO: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                      },
                      style: OutlinedButton.styleFrom(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(20),
                        ),
                      ),
                      child: const Text('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTemplateCard({
    required String title,
    required String description,
    required IconData icon,
    required Color color,
    required String template,
  }) {
    return Container(
      margin: const EdgeInsets.only(bottom: 16),
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            spreadRadius: 1,
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: color.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Icon(icon, color: color, size: 24),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      title,
                      style: const TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 4),
                    Text(
                      description,
                      style: TextStyle(
                        fontSize: 14,
                        color: Colors.grey[600],
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
          
          const SizedBox(height: 16),
          
          Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.grey[50],
              borderRadius: BorderRadius.circular(12),
              border: Border.all(color: Colors.grey[200]!),
            ),
            child: Text(
              template,
              style: TextStyle(
                fontSize: 13,
                color: Colors.grey[700],
                height: 1.4,
                fontFamily: 'monospace',
              ),
            ),
          ),
          
          const SizedBox(height: 16),
          
          Row(
            children: [
              Expanded(
                child: OutlinedButton(
                  onPressed: () {
                    // TODO: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω
                  },
                  style: OutlinedButton.styleFrom(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: ElevatedButton(
                  onPressed: () {
                    // TODO: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —à–∞–±–ª–æ–Ω
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: color,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å'),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildHistoryCard({
    required String title,
    required String date,
    required String status,
    required String engagement,
    required Color color,
  }) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.1),
            spreadRadius: 1,
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Row(
        children: [
          Container(
            width: 50,
            height: 50,
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Icon(
              _getStatusIcon(status),
              color: color,
              size: 24,
            ),
          ),
          const SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                  ),
                ),
                const SizedBox(height: 4),
                Text(
                  date,
                  style: TextStyle(
                    fontSize: 14,
                    color: Colors.grey[600],
                  ),
                ),
              ],
            ),
          ),
          Column(
            crossAxisAlignment: CrossAxisAlignment.end,
            children: [
              Container(
                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                decoration: BoxDecoration(
                  color: color.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  status,
                  style: TextStyle(
                    color: color,
                    fontSize: 12,
                    fontWeight: FontWeight.w500,
                  ),
                ),
              ),
              const SizedBox(height: 4),
              Text(
                engagement,
                style: TextStyle(
                  fontSize: 12,
                  color: Colors.grey[500],
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildStatItem(IconData icon, String count, Color color) {
    return Row(
      children: [
        Icon(icon, color: color, size: 16),
        const SizedBox(width: 4),
        Text(
          count,
          style: TextStyle(
            color: color,
            fontSize: 14,
            fontWeight: FontWeight.w500,
          ),
        ),
      ],
    );
  }

  IconData _getStatusIcon(String status) {
    switch (status) {
      case '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω':
        return Icons.check_circle;
      case '–ß–µ—Ä–Ω–æ–≤–∏–∫':
        return Icons.edit;
      case '–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω':
        return Icons.archive;
      default:
        return Icons.info;
    }
  }

  void _generatePost() {
    setState(() {
      _isLoading = true;
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
    Future.delayed(const Duration(seconds: 3), () {
      setState(() {
        _isLoading = false;
      });
      
      // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!'),
          backgroundColor: Colors.green,
        ),
      );
    });
  }

  void _refreshData() {
    setState(() {
      _isLoading = true;
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    Future.delayed(const Duration(seconds: 2), () {
      setState(() {
        _isLoading = false;
      });
    });
  }
}
