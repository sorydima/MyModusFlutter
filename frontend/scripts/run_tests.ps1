# MyModus Test Runner Script for Windows
# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

param(
    [Parameter(Position=0)]
    [string]$Command = "all"
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"
$White = "White"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor $Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor $Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor $Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor $Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-Dependencies {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if (-not (Get-Command flutter -ErrorAction SilentlyContinue)) {
        Write-Error "Flutter –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Flutter SDK."
        exit 1
    }
    
    if (-not (Get-Command dart -ErrorAction SilentlyContinue)) {
        Write-Error "Dart –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Dart SDK."
        exit 1
    }
    
    Write-Success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
function Clear-Project {
    Write-Info "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    flutter clean
    flutter pub get
    
    Write-Success "–ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–æ–≤
function Generate-Mocks {
    Write-Info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤..."
    
    if (Test-Path "test/widget_tests.mocks.dart") {
        Remove-Item "test/widget_tests.mocks.dart"
    }
    
    if (Test-Path "test/integration_tests.mocks.dart") {
        Remove-Item "test/integration_tests.mocks.dart"
    }
    
    flutter packages pub run build_runner build --delete-conflicting-outputs
    
    Write-Success "–ú–æ–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤
function Run-UnitTests {
    Write-Info "–ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
    
    if (Test-Path "test/unit") {
        flutter test test/unit/ --reporter=expanded
        Write-Success "Unit —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    } else {
        Write-Warning "–ü–∞–ø–∫–∞ unit —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    }
}

# –ó–∞–ø—É—Å–∫ widget —Ç–µ—Å—Ç–æ–≤
function Run-WidgetTests {
    Write-Info "–ó–∞–ø—É—Å–∫ widget —Ç–µ—Å—Ç–æ–≤..."
    
    if (Test-Path "test/widget_tests.dart") {
        flutter test test/widget_tests.dart --reporter=expanded
        Write-Success "Widget —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    } else {
        Write-Warning "–§–∞–π–ª widget —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
}

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
function Run-IntegrationTests {
    Write-Info "–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    if (Test-Path "test/integration_tests.dart") {
        flutter test test/integration_tests.dart --reporter=expanded
        Write-Success "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    } else {
        Write-Warning "–§–∞–π–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
}

# –ó–∞–ø—É—Å–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
function Run-PlatformTests {
    Write-Info "–ó–∞–ø—É—Å–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    if (Test-Path "test/platform_tests.dart") {
        flutter test test/platform_tests.dart --reporter=expanded
        Write-Success "–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    } else {
        Write-Warning "–§–∞–π–ª –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
function Run-AllTests {
    Write-Info "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    # –°–Ω–∞—á–∞–ª–∞ unit —Ç–µ—Å—Ç—ã
    Run-UnitTests
    
    # –ó–∞—Ç–µ–º widget —Ç–µ—Å—Ç—ã
    Run-WidgetTests
    
    # –ó–∞—Ç–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    Run-IntegrationTests
    
    # –ò –Ω–∞–∫–æ–Ω–µ—Ü –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    Run-PlatformTests
    
    Write-Success "–í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
function Run-TestsWithCoverage {
    Write-Info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
    if (-not (Test-Path "coverage")) {
        New-Item -ItemType Directory -Path "coverage"
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
    flutter test --coverage --reporter=expanded
    
    Write-Success "–¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ watch —Ä–µ–∂–∏–º–µ
function Run-TestsWatch {
    Write-Info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ watch —Ä–µ–∂–∏–º–µ..."
    
    flutter test --watch --reporter=expanded
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
function Run-PlatformSpecificTests {
    param([string]$Platform)
    
    switch ($Platform) {
        "android" {
            Write-Info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è Android..."
            flutter test --platform=android --reporter=expanded
        }
        "ios" {
            Write-Info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è iOS..."
            flutter test --platform=ios --reporter=expanded
        }
        "web" {
            Write-Info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è Web..."
            flutter test --platform=web --reporter=expanded
        }
        default {
            Write-Error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $Platform"
            Write-Info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: android, ios, web"
            exit 1
        }
    }
    
    Write-Success "–¢–µ—Å—Ç—ã –¥–ª—è $Platform –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
function Run-CodeAnalysis {
    Write-Info "–ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..."
    
    # –ê–Ω–∞–ª–∏–∑ Dart –∫–æ–¥–∞
    flutter analyze
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    flutter format --dry-run .
    
    Write-Success "–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
function Show-Help {
    Write-Host "MyModus Test Runner - –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤" -ForegroundColor $White
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\run_tests.ps1 [–∫–æ–º–∞–Ω–¥–∞]" -ForegroundColor $White
    Write-Host ""
    Write-Host "–ö–æ–º–∞–Ω–¥—ã:" -ForegroundColor $White
    Write-Host "  all          - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" -ForegroundColor $White
    Write-Host "  unit         - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  widget       - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ widget —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  integration  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  platform     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  coverage     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º" -ForegroundColor $White
    Write-Host "  watch        - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ watch —Ä–µ–∂–∏–º–µ" -ForegroundColor $White
    Write-Host "  android      - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è Android" -ForegroundColor $White
    Write-Host "  ios          - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è iOS" -ForegroundColor $White
    Write-Host "  web          - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è Web" -ForegroundColor $White
    Write-Host "  analyze      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞" -ForegroundColor $White
    Write-Host "  help         - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É" -ForegroundColor $White
    Write-Host ""
    Write-Host "–ü—Ä–∏–º–µ—Ä—ã:" -ForegroundColor $White
    Write-Host "  .\run_tests.ps1                    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  .\run_tests.ps1 widget            # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ widget —Ç–µ—Å—Ç—ã" -ForegroundColor $White
    Write-Host "  .\run_tests.ps1 coverage          # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º" -ForegroundColor $White
    Write-Host "  .\run_tests.ps1 android           # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è Android" -ForegroundColor $White
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Info "üöÄ MyModus Test Runner"
    Write-Info "–ö–æ–º–∞–Ω–¥–∞: $Command"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    Test-Dependencies
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    Clear-Project
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–æ–∫–∏
    Generate-Mocks
    
    switch ($Command) {
        "unit" { Run-UnitTests }
        "widget" { Run-WidgetTests }
        "integration" { Run-IntegrationTests }
        "platform" { Run-PlatformTests }
        "coverage" { Run-TestsWithCoverage }
        "watch" { Run-TestsWatch }
        "android" { Run-PlatformSpecificTests "android" }
        "ios" { Run-PlatformSpecificTests "ios" }
        "web" { Run-PlatformSpecificTests "web" }
        "analyze" { Run-CodeAnalysis }
        "all" { Run-AllTests }
        "help" { Show-Help }
        "-h" { Show-Help }
        "--help" { Show-Help }
        default {
            Write-Error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $Command"
            Show-Help
            exit 1
        }
    }
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
Main
