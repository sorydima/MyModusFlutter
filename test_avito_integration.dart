#!/usr/bin/env dart

import 'dart:io';
import 'package:http/http.dart' as http;
import 'dart:convert';

/// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Avito
/// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Avito
void main(List<String> args) async {
  print('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Avito...\n');

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend API
  await testBackendAPI();

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—Å–∏–Ω–≥ Avito URL
  await testAvitoParser();

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∞–ø–µ—Ä–∞
  await testAvitoScraper();

  print('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

Future<void> testBackendAPI() async {
  print('üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend API...');
  
  try {
    final response = await http.get(Uri.parse('http://localhost:8080/health'));
    
    if (response.statusCode == 200) {
      print('‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω');
      final data = json.decode(response.body);
      print('   –°—Ç–∞—Ç—É—Å: ${data['status']}');
    } else {
      print('‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: ${response.statusCode})');
    }
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ backend: $e');
    print('   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080');
  }
}

Future<void> testAvitoParser() async {
  print('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ Avito...');
  
  const testUrl = 'https://www.avito.ru/moskva/odezhda_obuv_aksessuary/test_item_123';
  
  try {
    final response = await http.post(
      Uri.parse('http://localhost:8080/api/avito/parse'),
      headers: {'Content-Type': 'application/json'},
      body: json.encode({'url': testUrl}),
    );
    
    if (response.statusCode == 200) {
      print('‚úÖ –ü–∞—Ä—Å–µ—Ä Avito —Ä–∞–±–æ—Ç–∞–µ—Ç');
      final data = json.decode(response.body);
      print('   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${data['title'] ?? '–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è'}');
    } else {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ (–∫–æ–¥: ${response.statusCode})');
      print('   –û—Ç–≤–µ—Ç: ${response.body}');
    }
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞: $e');
  }
}

Future<void> testAvitoScraper() async {
  print('\nüï∑Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∞–ø–µ—Ä–∞ Avito...');
  
  try {
    final response = await http.post(
      Uri.parse('http://localhost:8080/api/scrape/avito'),
      headers: {'Content-Type': 'application/json'},
    );
    
    if (response.statusCode == 200) {
      print('‚úÖ –°–∫—Ä–∞–ø–µ—Ä Avito –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      final data = json.decode(response.body);
      print('   –°—Ç–∞—Ç—É—Å: ${data['status']}');
    } else {
      print('‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä–∞–ø–µ—Ä–∞ (–∫–æ–¥: ${response.statusCode})');
    }
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∞–ø–µ—Ä–∞: $e');
  }
}

/// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL Avito
bool isValidAvitoUrl(String url) {
  try {
    final uri = Uri.parse(url);
    return uri.host.contains('avito.ru') && uri.path.contains('/');
  } catch (e) {
    return false;
  }
}

/// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
void demonstrateUsage() {
  print('\nüìö –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:');
  
  const urls = [
    'https://www.avito.ru/moskva/odezhda_obuv_aksessuary/item_123',
    'https://www.avito.ru/user/2f8b6893c14fcb7aa600e1df2010ddd2/profile',
    'https://example.com/invalid',
  ];
  
  for (final url in urls) {
    final isValid = isValidAvitoUrl(url);
    print('   ${isValid ? '‚úÖ' : '‚ùå'} $url');
  }
}

/// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
void printInstructions() {
  print('\nüìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:');
  print('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä: dart run backend/bin/server.dart');
  print('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ç–µ—Å—Ç: dart run test_avito_integration.dart');
  print('3. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI –∑–∞–ø—É—Å—Ç–∏—Ç–µ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  print('4. –û—Ç–∫—Ä–æ–π—Ç–µ —ç–∫—Ä–∞–Ω "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Avito"');
  print('5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥ URL, –ø–æ–∏—Å–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
}

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
void printFeatures() {
  print('\nüöÄ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Avito –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
  print('‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ URL');
  print('‚Ä¢ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º');
  print('‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º');
  print('‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
  print('‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω');
  print('‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–≤—Ü–∞—Ö');
  print('‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤');
  print('‚Ä¢ AI-–∞–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤');
  print('‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Web3 –∫–æ—à–µ–ª—å–∫–∞–º–∏');
}

/// –°–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
void printOptimizationTips() {
  print('\n‚ö° –°–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
  print('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  print('‚Ä¢ –ö—ç—à–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
  print('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è');
  print('‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ Avito');
  print('‚Ä¢ –†–µ–∞–ª–∏–∑—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ retry –ª–æ–≥–∏–∫—É');
}
