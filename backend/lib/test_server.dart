import 'dart:io';
import 'package:shelf/shelf.dart';
import 'package:shelf/shelf_io.dart' as io;
import 'package:shelf_router/shelf_router.dart';
import 'package:shelf_cors_headers/shelf_cors_headers.dart';

void main(List<String> args) async {
  // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
  final router = Router();

  // Health check
  router.get('/health', (Request request) {
    return Response.ok('OK', headers: {'content-type': 'text/plain'});
  });

  // API endpoints
  router.get('/api/products', _getProducts);
  router.get('/api/categories', _getCategories);
  router.post('/api/auth/register', _register);
  router.post('/api/auth/login', _login);

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ CORS
  final handler = Pipeline()
      .addMiddleware(corsHeaders())
      .addMiddleware(logRequests())
      .addHandler(router);

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  final server = await io.serve(handler, '0.0.0.0', 8080);
  print('üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8080');
  print('üì± Health check: http://localhost:8080/health');
  print('üõçÔ∏è –¢–æ–≤–∞—Ä—ã: http://localhost:8080/api/products');
  print('üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: http://localhost:8080/api/categories');

  // Graceful shutdown
  ProcessSignal.sigint.watch().listen((_) async {
    print('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    await server.close();
    exit(0);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ API
Future<Response> _getProducts(Request request) async {
  final products = [
    {
      'id': '1',
      'title': 'Nike Air Max 270',
      'price': 12990,
      'image_url': 'https://via.placeholder.com/400x400/FF6B6B/FFFFFF?text=Nike+Air+Max+270',
      'brand': 'Nike',
    },
    {
      'id': '2',
      'title': 'Adidas Ultraboost 22',
      'price': 18990,
      'image_url': 'https://via.placeholder.com/400x400/4ECDC4/FFFFFF?text=Adidas+Ultraboost+22',
      'brand': 'Adidas',
    },
    {
      'id': '3',
      'title': 'Levi\'s 501 Original Jeans',
      'price': 7990,
      'image_url': 'https://via.placeholder.com/400x400/45B7D1/FFFFFF?text=Levis+501+Jeans',
      'brand': 'Levi\'s',
    },
  ];
  
  return Response.ok(
    '{"products": $products}',
    headers: {'content-type': 'application/json'},
  );
}

Future<Response> _getCategories(Request request) async {
  final categories = [
    {
      'id': '1',
      'name': '–û–±—É–≤—å',
      'description': '–ö—Ä–æ—Å—Å–æ–≤–∫–∏, —Ç—É—Ñ–ª–∏, –±–æ—Ç–∏–Ω–∫–∏',
      'icon': 'üëü',
    },
    {
      'id': '2',
      'name': '–û–¥–µ–∂–¥–∞',
      'description': '–§—É—Ç–±–æ–ª–∫–∏, –¥–∂–∏–Ω—Å—ã, –∫—É—Ä—Ç–∫–∏',
      'icon': 'üëï',
    },
    {
      'id': '3',
      'name': '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',
      'description': '–°—É–º–∫–∏, —Ä–µ–º–Ω–∏, —É–∫—Ä–∞—à–µ–Ω–∏—è',
      'icon': 'üëú',
    },
  ];
  
  return Response.ok(
    '{"categories": $categories}',
    headers: {'content-type': 'application/json'},
  );
}

Future<Response> _register(Request request) async {
  return Response.ok(
    '{"message": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞", "user_id": "123"}',
    headers: {'content-type': 'application/json'},
  );
}

Future<Response> _login(Request request) async {
  return Response.ok(
    '{"message": "–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω", "token": "fake_jwt_token"}',
    headers: {'content-type': 'application/json'},
  );
}
