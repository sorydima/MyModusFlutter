events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Кэширование для IPFS
    proxy_cache_path /var/cache/nginx/ipfs levels=1:2 keys_zone=ipfs_cache:10m max_size=10g inactive=60m use_temp_path=off;

    # Upstream для IPFS узла
    upstream ipfs_backend {
        server ipfs-node:8080;
        keepalive 32;
    }

    # Основной сервер
    server {
        listen 80;
        server_name localhost;

        # IPFS Gateway
        location /ipfs/ {
            # Кэширование
            proxy_cache ipfs_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            proxy_cache_valid any 1m;

            # Заголовки кэша
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-IPFS-Gateway "MyModus IPFS Gateway";

            # Проксирование к IPFS узлу
            proxy_pass http://ipfs_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Обработка ошибок
            proxy_intercept_errors on;
            error_page 404 = @ipfs_not_found;
        }

        # IPFS API
        location /api/ {
            proxy_pass http://ipfs-node:5001/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS заголовки
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

            # Обработка OPTIONS запросов
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header Access-Control-Max-Age 1728000 always;
                add_header Content-Type 'text/plain; charset=utf-8' always;
                add_header Content-Length 0 always;
                return 204;
            }
        }

        # Статические файлы (изображения, CSS, JS)
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-IPFS-Gateway "MyModus IPFS Gateway";
        }

        # Обработка 404 для IPFS
        location @ipfs_not_found {
            return 404 '{"error": "IPFS content not found", "gateway": "MyModus IPFS Gateway"}';
            add_header Content-Type application/json;
        }

        # Health check
        location /health {
            access_log off;
            return 200 '{"status": "healthy", "gateway": "MyModus IPFS Gateway"}';
            add_header Content-Type application/json;
        }

        # Статистика
        location /stats {
            access_log off;
            stub_status on;
            add_header X-IPFS-Gateway "MyModus IPFS Gateway";
        }

        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Сервер для мониторинга
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://ipfs-monitor:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
